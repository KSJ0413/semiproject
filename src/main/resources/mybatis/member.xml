<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.study.member.MemberMapper">


<select id="total" parameterType="Map" resultType="int">
        select count(*) from member
                <where>
                        <choose>
                                <when test="col=='mname'">
                                        mname concat('%', #{word} ,'%')
                                </when>
                                <when test="col=='id'">
                                        id like concat('%', #{word} ,'%')
                                </when>
                                <when test="col=='email'">
                                        email like concat('%', #{word} ,'%')
                                </when>
                        </choose>
                </where>
        </select>
        <select id="list" parameterType="Map"
                resultType="com.study.member.MemberDTO">
                SELECT id, mname, tel, email, zipcode, address1,
                address2, fname
                FROM member
                <where>
                        <choose>
                                <when test="col=='mname'">
                                        mname like concat('%', #{word} ,'%')
                                </when>
                                <when test="col=='id'">
                                        id like concat('%', #{word} ,'%')
                                </when>
                                <when test="col=='email'">
                                        email like concat('%', #{word} ,'%')
                                </when>
                        </choose>
                </where>
                ORDER BY mdate DESC
                limit #{sno}, #{eno}
 
        </select>
 
        <update id="updateFile" parameterType="Map">
                update member
                set fname = #{fname}
                where id = #{id}
        </update>
        <update id="update" parameterType="com.study.member.MemberDTO">
                update member
                set tel = #{tel},
                email = #{email},
                zipcode = #{zipcode},
                address1 = #{address1},
                address2 = #{address2},
                job = #{job}
                where id = #{id}
        </update>
 
        <select id="read" parameterType="String"
                resultType="com.study.member.MemberDTO">
                select *
                from member
                where id = #{id}
        </select>
 
        <select id="getGrade" parameterType="String" resultType="Map">
                select grade, mname
                from member
                where id = #{id}
        </select>
        <select id="loginCheck" parameterType="Map" resultType="int">
                select
                count(*) from member
                where id = #{id}
                and passwd = #{passwd}
        </select>
 
        <select id="duplicatedId" parameterType="String"
                resultType="int">
                SELECT COUNT(id)
                FROM member
                WHERE id=#{id}
        </select>
        <select id="duplicatedEmail" parameterType="String"
                resultType="int">
                SELECT COUNT(email)
                FROM member
                WHERE email=#{email}
        </select>
 
        <insert id="create" parameterType="com.study.member.MemberDTO">
                INSERT INTO member(id, passwd, mname, tel, email, zipcode,
                address1, address2, job, mdate, fname, grade)
                VALUES(#{id}, #{passwd},#{mname}, #{tel}, #{email}, #{zipcode},
                #{address1}, #{address2}, #{job}, sysdate(), #{fname}, 'H')
        </insert>
        
         <resultMap type="com.study.member.MemberDTO" id="memberOrder">
                <result property="id" column="id" />
                <result property="mname" column="mname" />
                <result property="fname" column="fname" />
                <result property="zipcode" column="zipcode" />
                <result property="address1" column="address1" />
                <result property="address2" column="address2" />
                <collection property="list" column="id" javaType="List"
                        ofType="com.study.orders.OrdersDTO" resultMap="orderList" />
        </resultMap>
        <resultMap type="com.study.orders.OrdersDTO" id="orderList">
                <result property="orderno" column="orderno" />
                <result property="odate" column="odate" />
                <result property="total" column="total" />
                <result property="ostate" column="ostate" />
                <collection property="list" column="id" javaType="List"
                        ofType="com.study.orders.OrderdetailDTO" resultMap="detailList" />
        </resultMap>    
        <resultMap type="com.study.orders.OrderdetailDTO" id="detailList">
            <result property="quantity" column="quantity"/>
                <result property="pname" column="pname" />
                <result property="contentsno" column="contentsno" />            
        </resultMap>
        <select id="mypage" parameterType="String"
                resultMap="memberOrder">
                select  m.id, m.mname, m.fname, m.zipcode, m.address1, m.address2,
         o.orderno,o.odate,o.total,o.ostate,o.reqtext, d.quantity,
         d.contentsno, d.pname
                from  member m left outer join orders o
                on  m.id = o.id left outer join order_detail d
                on  o.orderno = d.orderno
                where  m.id=#{id}
        </select>
        
         <select id="idFind" parameterType="Map" resultType="int">
                select
                count(*) from member
                where mname = #{mname}
                and email = #{email}
</select>

<select id="idView"  parameterType="Map"  resultType="String">
	select id
	  from member
	 where mname = #{mname} AND email = #{email}
</select>
         <select id="passwdFind" parameterType="Map" resultType="int">
                select
                count(*) from member
                where id = #{id}
                and mname = #{mname}
</select>
<select id="passwdView"  parameterType="Map"  resultType="String">
	select passwd
	  from member
	 where id = #{id} AND mname = #{mname}
</select>
 
</mapper>
